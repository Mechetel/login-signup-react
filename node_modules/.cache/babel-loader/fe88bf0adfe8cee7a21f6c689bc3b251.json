{"ast":null,"code":"import _objectSpread from \"/Users/dmitryhoma/Projects/login-signup-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/dmitryhoma/Projects/login-signup-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dmitryhoma/Projects/login-signup-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dmitryhoma/Projects/login-signup-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dmitryhoma/Projects/login-signup-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dmitryhoma/Projects/login-signup-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/dmitryhoma/Projects/login-signup-react/src/components/Signup.jsx\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nvar password = require(\"secure-random-password\");\n\nvar SignUp = /*#__PURE__*/function (_Component) {\n  _inherits(SignUp, _Component);\n\n  function SignUp(props) {\n    var _this;\n\n    _classCallCheck(this, SignUp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SignUp).call(this, props));\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var user = _this.state.user;\n      Object.keys(user).forEach(function (field) {\n        return _this.validateProperty(field, user[field]);\n      });\n\n      if (!Object.keys(_this.state.errors).length) {\n        _this.props.addUser(_this.state.user);\n      }\n    };\n\n    _this.handleGenerate = function (e) {\n      e.preventDefault();\n      var final_password = password.randomPassword({\n        characters: [{\n          characters: password.upper,\n          exactly: 2\n        }, {\n          characters: password.digits,\n          exactly: 2\n        }, {\n          characters: \"!@#$%^&*\",\n          exactly: 2\n        }, password.lower]\n      });\n\n      _this.setState({\n        user: _objectSpread({}, prevState.user, {\n          password: final_password,\n          confirmPassword: final_password\n        })\n      });\n    };\n\n    _this.validatePasswords = function () {\n      var _this$state = _this.state,\n          errors = _this$state.errors,\n          user = _this$state.user;\n\n      switch (name) {\n        case \"password\":\n          {\n            var testPassword = function testPassword(pass) {\n              var allRigthCharacters = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz!@#$%^&*\";\n\n              for (var i = 0; i < pass.length; i++) {\n                if (allRigthCharacters.includes(pass[i])) {\n                  continue;\n                } else {\n                  return false;\n                }\n              }\n\n              return true;\n            };\n\n            user[name] = value;\n            var regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,15})/;\n\n            if (regex.test(value.trim()) && testPassword(value.trim())) {\n              delete errors[name];\n            } else {\n              errors[name] = \"Error with password. Must comply with the regulations\";\n            }\n\n            break;\n          }\n\n        case \"confirmPassword\":\n          {\n            user[name] = value;\n\n            if (!(user[\"password\"] === value)) {\n              errors[name] = \"Passwords didn't match. Try again.\";\n            } else if (!value.trim()) {\n              errors[name] = \"Confirm Password can't be empty.\";\n            } else {\n              delete errors[name];\n            }\n\n            break;\n          }\n      }\n\n      _this.setState({\n        user: user,\n        errors: errors\n      });\n    };\n\n    _this.validateProperty = function (name, value) {\n      var _this$state2 = _this.state,\n          errors = _this$state2.errors,\n          user = _this$state2.user; // eslint-disable-next-line\n\n      switch (name) {\n        case \"firstName\":\n        case \"lastName\":\n          {\n            var regex = /^[a-z ,.'-]+$/i;\n            user[name] = value;\n            var nameUser = name === \"firstName\" ? \"First Name\" : \"Last Name\";\n\n            if (value === \"\") {\n              errors[name] = \"Please enter your \".concat(nameUser);\n            } else if (value.trim().length < 2) {\n              errors[name] = \"\".concat(nameUser, \" must be at least 2 characters long.\");\n            } else if (regex.test(value.trim())) {\n              delete errors[name];\n            } else {\n              errors[name] = \"\".concat(nameUser, \" contains alphanumeric charaters or ,.'- only\");\n            }\n\n            break;\n          }\n\n        case \"dob\":\n          {\n            user[name] = value;\n            var date = new Date();\n            var month = String(date.getMonth() + 1).padStart(2, \"0\");\n            var day = String(date.getDate()).padStart(2, \"0\");\n            var year = String(date.getFullYear());\n            var dateValue = value.split(\"-\");\n\n            if (+dateValue[0] > +year || +dateValue[0] === +year && +dateValue[1] > +month || +dateValue[0] === +year && +dateValue[1] === +month && +dateValue[2] > +day) {\n              errors[\"dob\"] = \"Date of birth should be less than current date\";\n            } else {\n              delete errors[\"dob\"];\n            }\n\n            break;\n          }\n\n        case \"gender\":\n          {\n            user[name] = value;\n\n            if (value === \"\") {\n              errors[\"gender\"] = \"Please select your gender\";\n            } else {\n              delete errors[\"gender\"];\n            }\n\n            break;\n          }\n\n        case \"phone\":\n          {\n            if (value === \"\") {\n              errors[\"phone\"] = \"Please enter your contact number.\";\n              user[name] = value;\n            } else {\n              var _regex = /^[0-9]+$/g;\n\n              if (_regex.test(value)) {\n                user[name] = value;\n\n                if (value.length !== 10) {\n                  errors[\"phone\"] = \"Phone number length should be 10 characters.\";\n                } else {\n                  delete errors[\"phone\"];\n                }\n              }\n            }\n\n            break;\n          }\n\n        case \"email\":\n          {\n            user[name] = value; // eslint-disable-next-line\n\n            var _regex2 = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n            if (_regex2.test(value.trim())) {\n              var users = JSON.parse(localStorage.getItem(\"users\")) || [];\n              var comp = users.filter(function (obj) {\n                return obj.email === value;\n              });\n\n              if (comp.length) {\n                errors[name] = \"Email already registered.\";\n              } else {\n                delete errors[name];\n              }\n            } else {\n              errors[name] = \"Please enter a valid email address.\";\n            }\n\n            break;\n          }\n\n        case \"password\":\n          {\n            var testPassword = function testPassword(pass) {\n              var allRigthCharacters = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz!@#$%^&*\";\n\n              for (var i = 0; i < pass.length; i++) {\n                if (allRigthCharacters.includes(pass[i])) {\n                  continue;\n                } else {\n                  return false;\n                }\n              }\n\n              return true;\n            };\n\n            user[name] = value;\n            var _regex3 = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,15})/;\n\n            if (_regex3.test(value.trim()) && testPassword(value.trim())) {\n              delete errors[name];\n            } else {\n              errors[name] = \"Error with password. Must comply with the regulations\";\n            }\n\n            break;\n          }\n\n        case \"confirmPassword\":\n          {\n            user[name] = value;\n\n            if (!(user[\"password\"] === value)) {\n              errors[name] = \"Passwords didn't match. Try again.\";\n            } else if (!value.trim()) {\n              errors[name] = \"Confirm Password can't be empty.\";\n            } else {\n              delete errors[name];\n            }\n\n            break;\n          }\n      }\n\n      _this.setState({\n        user: user,\n        errors: errors\n      });\n    };\n\n    var _user = localStorage.getItem(\"user\");\n\n    if (_user) {\n      _this.props.history.push(\"/home\");\n    }\n\n    _this.state = {\n      user: {\n        firstName: \"\",\n        lastName: \"\",\n        dob: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        phone: \"\",\n        gender: \"\"\n      },\n      errors: {}\n    };\n    return _this;\n  }\n\n  _createClass(SignUp, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"my-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 9\n        }\n      }, \"SIGN UP\"), /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"firstName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }\n      }, \"First Name*\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        name: \"firstName\",\n        id: \"firstName\",\n        required: true,\n        onChange: function onChange(e) {\n          return _this2.validateProperty(e.target.name, e.target.value);\n        },\n        className: \"form-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-sm text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }\n      }, this.state.errors[\"firstName\"])), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"lastName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }\n      }, \"Last Name*\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        name: \"lastName\",\n        id: \"lastName\",\n        required: true,\n        onChange: function onChange(e) {\n          return _this2.validateProperty(e.target.name, e.target.value);\n        },\n        className: \"form-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-sm text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }\n      }, this.state.errors[\"lastName\"])), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"phone\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }\n      }, \"Phone Number*\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"tel\",\n        name: \"phone\",\n        id: \"phone\",\n        required: true,\n        value: this.state.user.phone,\n        onChange: function onChange(e) {\n          return _this2.validateProperty(e.target.name, e.target.value);\n        },\n        className: \"form-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"small\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 13\n        }\n      }, \"Format: 1234567890\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-sm text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }\n      }, this.state.errors[\"phone\"])), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"gender\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }\n      }, \"Gender*\"), /*#__PURE__*/React.createElement(\"select\", {\n        name: \"gender\",\n        id: \"gender\",\n        required: true,\n        value: this.state.user.gender,\n        className: \"form-control\",\n        onChange: function onChange(e) {\n          return _this2.validateProperty(e.target.name, e.target.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"male\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 15\n        }\n      }, \"Male\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"female\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 15\n        }\n      }, \"Female\")), /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-sm text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }\n      }, this.state.errors[\"gender\"])), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"dob\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 13\n        }\n      }, \"Date Of Birth*\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"date\",\n        name: \"dob\",\n        id: \"dob\",\n        required: true,\n        max: \"2022-01-01\",\n        min: \"1920-01-01\",\n        onChange: function onChange(e) {\n          return _this2.validateProperty(e.target.name, e.target.value);\n        },\n        className: \"form-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-sm text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }\n      }, this.state.errors[\"dob\"])), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }\n      }, \"Email*\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        autoComplete: \"off\",\n        id: \"email\",\n        required: true,\n        onChange: function onChange(e) {\n          return _this2.validateProperty(e.target.name, e.target.value);\n        },\n        className: \"form-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 13\n        }\n      }, \"Email must be example@example.example\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-sm text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }\n      }, this.state.errors[\"email\"])), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 13\n        }\n      }, \"Password*\"), /*#__PURE__*/React.createElement(\"input\", {\n        name: \"password\",\n        id: \"password\",\n        required: true,\n        value: this.state.user.password,\n        onChange: function onChange(e) {\n          return _this2.validateProperty(e.target.name, e.target.value);\n        },\n        className: \"form-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 13\n        }\n      }, \"Password must be at least 8 characters long and must contains 1 lowercase character, 1 uppercase character, 1 numeric character and 1 special character !@#$%^&*.\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-sm text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 13\n        }\n      }, this.state.errors[\"password\"])), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"confirmPassword\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 13\n        }\n      }, \"Confirm Password*\"), /*#__PURE__*/React.createElement(\"input\", {\n        name: \"confirmPassword\",\n        id: \"confirmPassword\",\n        required: true,\n        value: this.state.user.confirmPassword,\n        onChange: function onChange(e) {\n          return _this2.validateProperty(e.target.name, e.target.value);\n        },\n        className: \"form-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-sm text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 13\n        }\n      }, this.state.errors[\"confirmPassword\"])), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }\n      }, \"Sign Up\")), /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.handleGenerate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-success recommend-password-button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }\n      }, \"Recomend Password\")));\n    }\n  }]);\n\n  return SignUp;\n}(Component);\n\nexport default withRouter(SignUp);","map":{"version":3,"sources":["/Users/dmitryhoma/Projects/login-signup-react/src/components/Signup.jsx"],"names":["React","Component","withRouter","password","require","SignUp","props","handleSubmit","e","preventDefault","user","state","Object","keys","forEach","field","validateProperty","errors","length","addUser","handleGenerate","final_password","randomPassword","characters","upper","exactly","digits","lower","setState","prevState","confirmPassword","validatePasswords","name","testPassword","pass","allRigthCharacters","i","includes","value","regex","test","trim","nameUser","date","Date","month","String","getMonth","padStart","day","getDate","year","getFullYear","dateValue","split","users","JSON","parse","localStorage","getItem","comp","filter","obj","email","history","push","firstName","lastName","dob","phone","gender","target"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nconst password = require(\"secure-random-password\");\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n    const user = localStorage.getItem(\"user\");\n    if (user) {\n      this.props.history.push(\"/home\");\n    }\n    this.state = {\n      user: {\n        firstName: \"\",\n        lastName: \"\",\n        dob: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        phone: \"\",\n        gender: \"\",\n      },\n      errors: {},\n    };\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { user } = this.state;\n    Object.keys(user).forEach((field) =>\n      this.validateProperty(field, user[field])\n    );\n    if (!Object.keys(this.state.errors).length) {\n      this.props.addUser(this.state.user);\n    }\n  };\n\n  handleGenerate = (e) => {\n    e.preventDefault();\n    const final_password = password.randomPassword({\n      characters: [\n        { characters: password.upper, exactly: 2 },\n        { characters: password.digits, exactly: 2 },\n        { characters: \"!@#$%^&*\", exactly: 2 },\n        password.lower,\n      ],\n    });\n    this.setState({\n      user: {\n        ...prevState.user,\n        password: final_password,\n        confirmPassword: final_password,\n      },\n    });\n  };\n\n  validatePasswords = () => {\n    const { errors, user } = this.state;\n\n    switch (name) {\n      case \"password\": {\n        user[name] = value;\n        function testPassword(pass) {\n          let allRigthCharacters =\n            \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz!@#$%^&*\";\n          for (let i = 0; i < pass.length; i++) {\n            if (allRigthCharacters.includes(pass[i])) {\n              continue;\n            } else {\n              return false;\n            }\n          }\n          return true;\n        }\n        const regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,15})/;\n        if (regex.test(value.trim()) && testPassword(value.trim())) {\n          delete errors[name];\n        } else {\n          errors[name] =\n            \"Error with password. Must comply with the regulations\";\n        }\n        break;\n      }\n\n      case \"confirmPassword\": {\n        user[name] = value;\n        if (!(user[\"password\"] === value)) {\n          errors[name] = \"Passwords didn't match. Try again.\";\n        } else if (!value.trim()) {\n          errors[name] = \"Confirm Password can't be empty.\";\n        } else {\n          delete errors[name];\n        }\n        break;\n      }\n    }\n    this.setState({ user, errors });\n  };\n\n  validateProperty = (name, value) => {\n    const { errors, user } = this.state;\n    // eslint-disable-next-line\n    switch (name) {\n      case \"firstName\":\n      case \"lastName\": {\n        let regex = /^[a-z ,.'-]+$/i;\n        user[name] = value;\n        const nameUser = name === \"firstName\" ? \"First Name\" : \"Last Name\";\n        if (value === \"\") {\n          errors[name] = `Please enter your ${nameUser}`;\n        } else if (value.trim().length < 2) {\n          errors[name] = `${nameUser} must be at least 2 characters long.`;\n        } else if (regex.test(value.trim())) {\n          delete errors[name];\n        } else {\n          errors[\n            name\n          ] = `${nameUser} contains alphanumeric charaters or ,.'- only`;\n        }\n        break;\n      }\n\n      case \"dob\": {\n        user[name] = value;\n        const date = new Date();\n        const month = String(date.getMonth() + 1).padStart(2, \"0\");\n        const day = String(date.getDate()).padStart(2, \"0\");\n        const year = String(date.getFullYear());\n        const dateValue = value.split(\"-\");\n        if (\n          +dateValue[0] > +year ||\n          (+dateValue[0] === +year && +dateValue[1] > +month) ||\n          (+dateValue[0] === +year &&\n            +dateValue[1] === +month &&\n            +dateValue[2] > +day)\n        ) {\n          errors[\"dob\"] = \"Date of birth should be less than current date\";\n        } else {\n          delete errors[\"dob\"];\n        }\n        break;\n      }\n\n      case \"gender\": {\n        user[name] = value;\n        if (value === \"\") {\n          errors[\"gender\"] = \"Please select your gender\";\n        } else {\n          delete errors[\"gender\"];\n        }\n        break;\n      }\n\n      case \"phone\": {\n        if (value === \"\") {\n          errors[\"phone\"] = \"Please enter your contact number.\";\n          user[name] = value;\n        } else {\n          const regex = /^[0-9]+$/g;\n          if (regex.test(value)) {\n            user[name] = value;\n            if (value.length !== 10) {\n              errors[\"phone\"] = \"Phone number length should be 10 characters.\";\n            } else {\n              delete errors[\"phone\"];\n            }\n          }\n        }\n        break;\n      }\n\n      case \"email\": {\n        user[name] = value;\n        // eslint-disable-next-line\n        const regex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (regex.test(value.trim())) {\n          const users = JSON.parse(localStorage.getItem(\"users\")) || [];\n          const comp = users.filter((obj) => obj.email === value);\n          if (comp.length) {\n            errors[name] = \"Email already registered.\";\n          } else {\n            delete errors[name];\n          }\n        } else {\n          errors[name] = \"Please enter a valid email address.\";\n        }\n        break;\n      }\n\n      case \"password\": {\n        user[name] = value;\n        function testPassword(pass) {\n          let allRigthCharacters =\n            \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz!@#$%^&*\";\n          for (let i = 0; i < pass.length; i++) {\n            if (allRigthCharacters.includes(pass[i])) {\n              continue;\n            } else {\n              return false;\n            }\n          }\n          return true;\n        }\n        const regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,15})/;\n        if (regex.test(value.trim()) && testPassword(value.trim())) {\n          delete errors[name];\n        } else {\n          errors[name] =\n            \"Error with password. Must comply with the regulations\";\n        }\n        break;\n      }\n\n      case \"confirmPassword\": {\n        user[name] = value;\n        if (!(user[\"password\"] === value)) {\n          errors[name] = \"Passwords didn't match. Try again.\";\n        } else if (!value.trim()) {\n          errors[name] = \"Confirm Password can't be empty.\";\n        } else {\n          delete errors[name];\n        }\n        break;\n      }\n    }\n    this.setState({ user, errors });\n  };\n\n  render() {\n    return (\n      <>\n        <h1 className=\"my-3\">SIGN UP</h1>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"firstName\">First Name*</label>\n            <input\n              type=\"text\"\n              name=\"firstName\"\n              id=\"firstName\"\n              required\n              onChange={(e) =>\n                this.validateProperty(e.target.name, e.target.value)\n              }\n              className=\"form-control\"\n            />\n            <small className=\"text-sm text-danger\">\n              {this.state.errors[\"firstName\"]}\n            </small>\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"lastName\">Last Name*</label>\n            <input\n              type=\"text\"\n              name=\"lastName\"\n              id=\"lastName\"\n              required\n              onChange={(e) =>\n                this.validateProperty(e.target.name, e.target.value)\n              }\n              className=\"form-control\"\n            />\n            <small className=\"text-sm text-danger\">\n              {this.state.errors[\"lastName\"]}\n            </small>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"phone\">Phone Number*</label>\n            <input\n              type=\"tel\"\n              name=\"phone\"\n              id=\"phone\"\n              required\n              value={this.state.user.phone}\n              onChange={(e) =>\n                this.validateProperty(e.target.name, e.target.value)\n              }\n              className=\"form-control\"\n            />\n            <small>Format: 1234567890</small>\n            <br />\n            <small className=\"text-sm text-danger\">\n              {this.state.errors[\"phone\"]}\n            </small>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"gender\">Gender*</label>\n            <select\n              name=\"gender\"\n              id=\"gender\"\n              required\n              value={this.state.user.gender}\n              className=\"form-control\"\n              onChange={(e) =>\n                this.validateProperty(e.target.name, e.target.value)\n              }\n            >\n              <option></option>\n              <option value=\"male\">Male</option>\n              <option value=\"female\">Female</option>\n            </select>\n            <small className=\"text-sm text-danger\">\n              {this.state.errors[\"gender\"]}\n            </small>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"dob\">Date Of Birth*</label>\n            <input\n              type=\"date\"\n              name=\"dob\"\n              id=\"dob\"\n              required\n              max=\"2022-01-01\"\n              min=\"1920-01-01\"\n              onChange={(e) =>\n                this.validateProperty(e.target.name, e.target.value)\n              }\n              className=\"form-control\"\n            />\n            <small className=\"text-sm text-danger\">\n              {this.state.errors[\"dob\"]}\n            </small>\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">Email*</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              autoComplete=\"off\"\n              id=\"email\"\n              required\n              onChange={(e) =>\n                this.validateProperty(e.target.name, e.target.value)\n              }\n              className=\"form-control\"\n            />\n            <small className=\"text-sm\">\n              Email must be example@example.example\n            </small>\n            <br />\n            <small className=\"text-sm text-danger\">\n              {this.state.errors[\"email\"]}\n            </small>\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password*</label>\n            <input\n              name=\"password\"\n              id=\"password\"\n              required\n              value={this.state.user.password}\n              onChange={(e) =>\n                this.validateProperty(e.target.name, e.target.value)\n              }\n              className=\"form-control\"\n            />\n            <small className=\"text-sm\">\n              Password must be at least 8 characters long and must contains 1\n              lowercase character, 1 uppercase character, 1 numeric character\n              and 1 special character !@#$%^&*.\n            </small>\n            <br />\n            <small className=\"text-sm text-danger\">\n              {this.state.errors[\"password\"]}\n            </small>\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"confirmPassword\">Confirm Password*</label>\n            <input\n              name=\"confirmPassword\"\n              id=\"confirmPassword\"\n              required\n              value={this.state.user.confirmPassword}\n              onChange={(e) =>\n                this.validateProperty(e.target.name, e.target.value)\n              }\n              className=\"form-control\"\n            />\n            <small className=\"text-sm text-danger\">\n              {this.state.errors[\"confirmPassword\"]}\n            </small>\n          </div>\n\n          <button className=\"btn btn-primary\">Sign Up</button>\n        </form>\n        <form onSubmit={this.handleGenerate}>\n          <button className=\"btn btn-success recommend-password-button\">\n            Recomend Password\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default withRouter(SignUp);\n"]},"metadata":{},"sourceType":"module"}