{"ast":null,"code":"import _classCallCheck from \"/Users/dmitryhoma/Projects/login-signup-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dmitryhoma/Projects/login-signup-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dmitryhoma/Projects/login-signup-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dmitryhoma/Projects/login-signup-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dmitryhoma/Projects/login-signup-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/dmitryhoma/Projects/login-signup-react/src/components/Signup.jsx\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport generator from \"generate-password\";\n\ntestPassword = function testPassword(pass) {\n  var allRigthCharacters = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz!@#$%^&*\";\n\n  for (var i = 0; i < pass.length(); i++) {\n    if (allRigthCharacters.includes(pass[i])) {\n      continue;\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nvar SignUp = /*#__PURE__*/function (_Component) {\n  _inherits(SignUp, _Component);\n\n  function SignUp(props) {\n    var _this;\n\n    _classCallCheck(this, SignUp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SignUp).call(this, props));\n\n    _this.generatePassword = function () {\n      var pwd = generator.generate({\n        length: 8,\n        lowercase: true,\n        uppercase: true,\n        numbers: true,\n        symbols: true\n      });\n\n      _this.setState({\n        user: {\n          password: pwd\n        },\n        confirmPassword: pwd\n      });\n    };\n\n    _this.validateProperty = function (name, value) {\n      var _this$state = _this.state,\n          errors = _this$state.errors,\n          user = _this$state.user; // eslint-disable-next-line default-case\n\n      switch (name) {\n        case \"firstName\":\n        case \"lastName\":\n          {\n            var regex = /^[a-z ,.'-]+$/i;\n            user[name] = value;\n            var nameUser = name === \"firstName\" ? \"First Name\" : \"Last Name\";\n\n            if (value === \"\") {\n              errors[name] = \"Please enter your \".concat(nameUser);\n            } else if (value.trim().length < 2) {\n              errors[name] = \"\".concat(nameUser, \" must be at least 2 characters long.\");\n            } else if (regex.test(value.trim())) {\n              delete errors[name];\n            } else {\n              errors[name] = \"\".concat(nameUser, \" contains alphanumeric charaters or ,.'- only\");\n            }\n\n            break;\n          }\n\n        case \"dob\":\n          {\n            user[name] = value;\n            var date = new Date();\n            var month = String(date.getMonth() + 1).padStart(2, \"0\");\n            var day = String(date.getDate()).padStart(2, \"0\");\n            var year = String(date.getFullYear());\n            var dateValue = value.split(\"-\");\n\n            if (+dateValue[0] > +year || +dateValue[0] === +year && +dateValue[1] > +month || +dateValue[0] === +year && +dateValue[1] === +month && +dateValue[2] > +day) {\n              errors[\"dob\"] = \"Date of birth should be less than current date\";\n            } else {\n              delete errors[\"dob\"];\n            }\n\n            break;\n          }\n\n        case \"gender\":\n          {\n            user[name] = value;\n\n            if (value === \"\") {\n              errors[\"gender\"] = \"Please select your gender\";\n            } else {\n              delete errors[\"gender\"];\n            }\n\n            break;\n          }\n\n        case \"phone\":\n          {\n            if (value === \"\") {\n              errors[\"phone\"] = \"Please enter your contact number.\";\n              user[name] = value;\n            } else {\n              var _regex = /^[0-9]+$/g;\n\n              if (_regex.test(value)) {\n                user[name] = value;\n\n                if (value.length < 8 || value.length > 16) {\n                  errors[\"phone\"] = \"Phone number length should be more than 7 characters and less than 17 characters.\";\n                } else {\n                  delete errors[\"phone\"];\n                }\n              }\n            }\n\n            break;\n          }\n\n        case \"email\":\n          {\n            user[name] = value; // eslint-disable-next-line no-useless-escape\n\n            var _regex2 = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n            if (_regex2.test(value.trim())) {\n              var users = JSON.parse(localStorage.getItem(\"users\")) || [];\n              var comp = users.filter(function (obj) {\n                return obj.email === value;\n              });\n\n              if (comp.length) {\n                errors[name] = \"Email already registered.\";\n              } else {\n                delete errors[name];\n              }\n            } else {\n              errors[name] = \"Please enter a valid email address.\";\n            }\n\n            break;\n          }\n\n        case \"password\":\n          {\n            user[name] = value; // eslint-disable-next-line no-useless-escape\n\n            var _regex3 = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,15})/;\n\n            if (_regex3.test(value.trim()) && testPassword(value.trim())) {\n              delete errors[name];\n            } else {\n              errors[name] = \"Password must be at least 8 characters long and must contains 1 lowercase character, 1 uppercase character, 1 numeric character and 1 special character.\";\n            }\n\n            break;\n          }\n\n        case \"confirmPassword\":\n          {\n            var _this$state2 = _this.state,\n                passwordError = _this$state2.passwordError,\n                confirmPassword = _this$state2.confirmPassword;\n\n            if (!(user[\"password\"] === value)) {\n              passwordError = \"Passwords didn't match. Try again.\";\n            } else if (!value.trim()) {\n              passwordError = \"Confirm Password can't be empty.\";\n            } else {\n              passwordError = \"\";\n              confirmPassword = value;\n            }\n\n            _this.setState({\n              passwordError: passwordError,\n              confirmPassword: confirmPassword\n            });\n\n            break;\n          }\n      }\n\n      _this.setState({\n        user: user,\n        errors: errors\n      });\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var user = _this.state.user;\n      Object.keys(user).forEach(function (field) {\n        return _this.validateProperty(field, user[field]);\n      });\n\n      if (!_this.state.confirmPassword.trim()) {\n        _this.setState({\n          passwordError: \"Confirm Password can't be empty.\"\n        });\n      } else if (_this.state.confirmPassword !== _this.state.user[\"password\"]) {\n        _this.setState({\n          passwordError: \"Passwords didn't match. Try again.\"\n        });\n      }\n\n      if (!Object.keys(_this.state.errors).length) {\n        _this.props.addUser(_this.state.user);\n      }\n    };\n\n    var _user = localStorage.getItem(\"user\");\n\n    if (_user) {\n      _this.props.history.push(\"/home\");\n    }\n\n    _this.state = {\n      user: {\n        firstName: \"\",\n        lastName: \"\",\n        dob: \"\",\n        email: \"\",\n        password: \"\",\n        phone: \"\",\n        gender: \"\"\n      },\n      errors: {},\n      confirmPassword: \"\",\n      passwordError: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(SignUp, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"my-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 9\n        }\n      }, \"SIGN UP\"), /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"firstName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }\n      }, \"First Name\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        name: \"firstName\",\n        id: \"firstName\",\n        required: true,\n        onChange: function onChange(e) {\n          return _this2.validateProperty(e.target.name, e.target.value);\n        },\n        className: \"form-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-sm text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }\n      }, this.state.errors[\"firstName\"])), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"lastName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }\n      }, \"Last Name\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        name: \"lastName\",\n        id: \"lastName\",\n        required: true,\n        onChange: function onChange(e) {\n          return _this2.validateProperty(e.target.name, e.target.value);\n        },\n        className: \"form-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-sm text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }\n      }, this.state.errors[\"lastName\"])), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"lastName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }\n      }, \"Phone Number\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"tel\",\n        name: \"phone\",\n        id: \"phone\",\n        placeholder: \"+38 (000) 000-00-00\",\n        required: true,\n        value: this.state.user.phone,\n        onChange: function onChange(e) {\n          return _this2.validateProperty(e.target.name, e.target.value);\n        },\n        className: \"form-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-sm text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }\n      }, this.state.errors[\"phone\"])), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"gender\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }\n      }, \"Gender\"), /*#__PURE__*/React.createElement(\"select\", {\n        name: \"gender\",\n        id: \"gender\",\n        value: this.state.user.gender,\n        className: \"form-control\",\n        onChange: function onChange(e) {\n          return _this2.validateProperty(e.target.name, e.target.value);\n        },\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"male\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 15\n        }\n      }, \"Male\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"female\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 15\n        }\n      }, \"Female\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"others\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 15\n        }\n      }, \"Others\")), /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-sm text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }\n      }, this.state.errors[\"gender\"])), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"dob\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }\n      }, \"Date Of Birth\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"date\",\n        name: \"dob\",\n        id: \"dob\",\n        required: true,\n        max: \"2002-12-31\",\n        min: \"1920-01-01\",\n        onChange: function onChange(e) {\n          return _this2.validateProperty(e.target.name, e.target.value);\n        },\n        className: \"form-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-sm text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 13\n        }\n      }, this.state.errors[\"dob\"])), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }\n      }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        autoComplete: \"off\",\n        id: \"email\",\n        required: true,\n        onChange: function onChange(e) {\n          return _this2.validateProperty(e.target.name, e.target.value);\n        },\n        className: \"form-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-sm text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 13\n        }\n      }, this.state.errors[\"email\"])), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 13\n        }\n      }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n        name: \"password\",\n        id: \"password\",\n        required: true,\n        value: this.state.user.password,\n        onChange: function onChange(e) {\n          return _this2.validateProperty(e.target.name, e.target.value);\n        },\n        className: \"form-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-sm text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 13\n        }\n      }, this.state.errors[\"password\"])), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"confirmPassword\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 13\n        }\n      }, \"Confirm Password\"), /*#__PURE__*/React.createElement(\"input\", {\n        name: \"confirmPassword\",\n        id: \"confirmPassword\",\n        required: true,\n        value: this.state.confirmPassword,\n        onChange: function onChange(e) {\n          return _this2.validateProperty(e.target.name, e.target.value);\n        },\n        className: \"form-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-sm text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 13\n        }\n      }, this.state.passwordError)), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }\n      }, \"Sign Up\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-success\",\n        onClick: this.generatePassword,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 11\n        }\n      }, \"Recomend Password\")));\n    }\n  }]);\n\n  return SignUp;\n}(Component);\n\nexport default withRouter(SignUp);","map":{"version":3,"sources":["/Users/dmitryhoma/Projects/login-signup-react/src/components/Signup.jsx"],"names":["React","Component","withRouter","generator","testPassword","pass","allRigthCharacters","i","length","includes","SignUp","props","generatePassword","pwd","generate","lowercase","uppercase","numbers","symbols","setState","user","password","confirmPassword","validateProperty","name","value","state","errors","regex","nameUser","trim","test","date","Date","month","String","getMonth","padStart","day","getDate","year","getFullYear","dateValue","split","users","JSON","parse","localStorage","getItem","comp","filter","obj","email","passwordError","handleSubmit","e","preventDefault","Object","keys","forEach","field","addUser","history","push","firstName","lastName","dob","phone","gender","target"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport generator from \"generate-password\";\n\ntestPassword = (pass) => {\n  let allRigthCharacters = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz!@#$%^&*\";\n  for (let i = 0; i < pass.length(); i++) {\n    if (allRigthCharacters.includes(pass[i])) {\n      continue;\n    } else {\n      return false;\n    }\n  }\n  return true;\n}\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n    const user = localStorage.getItem(\"user\");\n    if (user) {\n      this.props.history.push(\"/home\");\n    }\n    this.state = {\n      user: {\n        firstName: \"\",\n        lastName: \"\",\n        dob: \"\",\n        email: \"\",\n        password: \"\",\n        phone : \"\",\n        gender : \"\"\n      },\n      errors: {},\n      confirmPassword: \"\",\n      passwordError: \"\",\n    };\n  }\n\n  generatePassword = () => {\n    const pwd = generator.generate({\n      length: 8,\n      lowercase: true,\n      uppercase: true,\n      numbers: true,\n      symbols: true\n    })\n    this.setState({\n      user:{\n        password: pwd\n      },\n      confirmPassword: pwd\n    })\n  }\n\n  validateProperty = (name, value) => {\n    const { errors, user } = this.state;\n    // eslint-disable-next-line default-case\n    switch (name) {\n      case \"firstName\":\n      case \"lastName\": {\n        let regex = /^[a-z ,.'-]+$/i;\n        user[name] = value;\n        const nameUser =\n          name === \"firstName\" ? \"First Name\" : \"Last Name\";\n        if(value === \"\"){\n          errors[\n            name\n          ] = `Please enter your ${nameUser}`;\n        }\n        else if (value.trim().length < 2) {\n          errors[\n            name\n          ] = `${nameUser} must be at least 2 characters long.`;\n        } else if (regex.test(value.trim())) {\n          delete errors[name];\n        } else {\n          errors[\n            name\n          ] = `${nameUser} contains alphanumeric charaters or ,.'- only`;\n        }\n        break;\n      }\n\n      case \"dob\": {\n        user[name] = value;\n        const date = new Date();\n        const month = String(date.getMonth() + 1).padStart(2, \"0\");\n        const day = String(date.getDate()).padStart(2, \"0\");\n        const year = String(date.getFullYear());\n        const dateValue = value.split(\"-\");\n        if (\n          +dateValue[0] > +year ||\n          (+dateValue[0] === +year && +dateValue[1] > +month) ||\n          (+dateValue[0] === +year &&\n            +dateValue[1] === +month &&\n            +dateValue[2] > +day)\n        ) {\n          errors[\"dob\"] =\n            \"Date of birth should be less than current date\";\n        } else {\n          delete errors[\"dob\"];\n        }\n        break;\n      }\n\n      case \"gender\" : {\n        user[name] = value;\n        if(value === \"\"){\n          errors[\"gender\"] = \"Please select your gender\";\n        } else{\n          delete errors[\"gender\"]\n        }\n        break;\n      }\n\n      case \"phone\" : {\n        if(value === \"\"){\n          errors[\"phone\"] = \"Please enter your contact number.\";\n          user[name] = value;\n        } else{\n          const regex = /^[0-9]+$/g;\n          if(regex.test(value)){\n            user[name] = value;\n            if(value.length<8 || value.length > 16){\n              errors[\"phone\"] = \"Phone number length should be more than 7 characters and less than 17 characters.\";\n            } else{\n              delete errors[\"phone\"]\n            }\n          }\n\n        }\n        break;\n      }\n\n      case \"email\": {\n        user[name] = value;\n        // eslint-disable-next-line no-useless-escape\n        const regex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (regex.test(value.trim())) {\n          const users =\n            JSON.parse(localStorage.getItem(\"users\")) || [];\n          const comp = users.filter(obj => obj.email === value);\n          if (comp.length) {\n            errors[name] = \"Email already registered.\";\n          } else {\n            delete errors[name];\n          }\n        } else {\n          errors[name] = \"Please enter a valid email address.\";\n        }\n        break;\n      }\n\n      case \"password\": {\n        user[name] = value;\n        // eslint-disable-next-line no-useless-escape\n        const regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,15})/;\n        if (regex.test(value.trim()) && testPassword(value.trim())) {\n          delete errors[name];\n        } else {\n          errors[name] =\n            \"Password must be at least 8 characters long and must contains 1 lowercase character, 1 uppercase character, 1 numeric character and 1 special character.\";\n        }\n        break;\n      }\n\n      case \"confirmPassword\": {\n        let { passwordError, confirmPassword } = this.state;\n        if (!(user[\"password\"] === value)) {\n          passwordError = \"Passwords didn't match. Try again.\";\n        } else if (!value.trim()) {\n          passwordError = \"Confirm Password can't be empty.\";\n        } else {\n          passwordError = \"\";\n          confirmPassword = value;\n        }\n        this.setState({ passwordError, confirmPassword });\n        break;\n      }\n    }\n    this.setState({ user, errors });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { user } = this.state;\n    Object.keys(user).forEach(field =>\n      this.validateProperty(field, user[field])\n    );\n    if (!this.state.confirmPassword.trim()) {\n      this.setState({\n        passwordError: \"Confirm Password can't be empty.\"\n      });\n    } else if (this.state.confirmPassword !== this.state.user[\"password\"]) {\n      this.setState({\n        passwordError: \"Passwords didn't match. Try again.\"\n      });\n    }\n    if (!Object.keys(this.state.errors).length) {\n      this.props.addUser(this.state.user);\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <h1 className=\"my-3\">SIGN UP</h1>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input\n              type=\"text\"\n              name=\"firstName\"\n              id=\"firstName\"\n              required\n              onChange={e =>\n                this.validateProperty(\n                  e.target.name,\n                  e.target.value\n                )\n              }\n              className=\"form-control\"\n            />\n            <small className=\"text-sm text-danger\">\n              {this.state.errors[\"firstName\"]}\n            </small>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input\n              type=\"text\"\n              name=\"lastName\"\n              id=\"lastName\"\n              required\n              onChange={e =>\n                this.validateProperty(\n                  e.target.name,\n                  e.target.value\n                )\n              }\n              className=\"form-control\"\n            />\n            <small className=\"text-sm text-danger\">\n              {this.state.errors[\"lastName\"]}\n            </small>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"lastName\">Phone Number</label>\n            <input\n              type=\"tel\"\n              name=\"phone\"\n              id=\"phone\"\n              placeholder=\"+38 (000) 000-00-00\"\n              required\n              value={this.state.user.phone}\n              onChange={e =>\n                this.validateProperty(\n                  e.target.name,\n                  e.target.value\n                )\n              }\n              className=\"form-control\"\n            />\n            <small className=\"text-sm text-danger\">\n              {this.state.errors[\"phone\"]}\n            </small>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"gender\">Gender</label>\n            <select\n              name=\"gender\"\n              id=\"gender\"\n              value={this.state.user.gender}\n              className=\"form-control\"\n              onChange={e =>\n                this.validateProperty(\n                  e.target.name,\n                  e.target.value\n                )\n              }\n              required\n            >\n              <option></option>\n              <option value=\"male\">Male</option>\n              <option value=\"female\">Female</option>\n              <option value=\"others\">Others</option>\n            </select>\n            <small className=\"text-sm text-danger\">\n              {this.state.errors[\"gender\"]}\n            </small>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"dob\">Date Of Birth</label>\n            <input\n              type=\"date\"\n              name=\"dob\"\n              id=\"dob\"\n              required\n              max=\"2002-12-31\"\n              min=\"1920-01-01\"\n              onChange={e =>\n                this.validateProperty(\n                  e.target.name,\n                  e.target.value\n                )\n              }\n              className=\"form-control\"\n            />\n            <small className=\"text-sm text-danger\">\n              {this.state.errors[\"dob\"]}\n            </small>\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              autoComplete=\"off\"\n              id=\"email\"\n              required\n              onChange={e =>\n                this.validateProperty(\n                  e.target.name,\n                  e.target.value\n                )\n              }\n              className=\"form-control\"\n            />\n            <small className=\"text-sm text-danger\">\n              {this.state.errors[\"email\"]}\n            </small>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              name=\"password\"\n              id=\"password\"\n              required\n              value={this.state.user.password}\n              onChange={e =>\n                this.validateProperty(\n                  e.target.name,\n                  e.target.value\n                )\n              }\n              className=\"form-control\"\n            />\n            <small className=\"text-sm text-danger\">\n              {this.state.errors[\"password\"]}\n            </small>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"confirmPassword\">\n              Confirm Password\n            </label>\n            <input\n              name=\"confirmPassword\"\n              id=\"confirmPassword\"\n              required\n              value={this.state.confirmPassword}\n              onChange={e =>\n                this.validateProperty(\n                  e.target.name,\n                  e.target.value\n                )\n              }\n              className=\"form-control\"\n            />\n            <small className=\"text-sm text-danger\">\n              {this.state.passwordError}\n            </small>\n          </div>\n          <button className=\"btn btn-primary\">Sign Up</button>\n          <button className=\"btn btn-success\" onClick={this.generatePassword}>Recomend Password</button>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default withRouter(SignUp);\n"]},"metadata":{},"sourceType":"module"}