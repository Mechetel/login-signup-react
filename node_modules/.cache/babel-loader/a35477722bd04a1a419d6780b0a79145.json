{"ast":null,"code":"import _classCallCheck from \"/Users/dmitryhoma/Projects/login-signup-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dmitryhoma/Projects/login-signup-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dmitryhoma/Projects/login-signup-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dmitryhoma/Projects/login-signup-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dmitryhoma/Projects/login-signup-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/dmitryhoma/Projects/login-signup-react/src/components/UpdateDetails.jsx\";\nimport React, { Component } from \"react\";\nimport { withRouter } from 'react-router-dom';\n\nvar SignUp = /*#__PURE__*/function (_Component) {\n  _inherits(SignUp, _Component);\n\n  function SignUp(props) {\n    var _this;\n\n    _classCallCheck(this, SignUp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SignUp).call(this, props));\n\n    _this.validateProperty = function (name, value) {\n      var _this$state = _this.state,\n          errors = _this$state.errors,\n          user = _this$state.user;\n\n      if (name !== \"confirmPassword\" && name !== \"phone\") {\n        user[name] = value;\n      } // eslint-disable-next-line default-case\n\n\n      switch (name) {\n        case \"firstName\":\n        case \"lastName\":\n          {\n            var regex = /^[a-z ,.'-]+$/i;\n            var nameUser = name === \"firstName\" ? \"First Name\" : \"Last Name\";\n\n            if (value === \"\") {\n              errors[name] = \"Please enter your \".concat(nameUser);\n            } else if (value.trim().length < 2) {\n              errors[name] = \"\".concat(nameUser, \" must be at least 2 characters long.\");\n            } else if (regex.test(value.trim())) {\n              delete errors[name];\n            } else {\n              errors[name] = \"\".concat(nameUser, \" contains alphanumeric charaters or ,.'- only\");\n            }\n\n            break;\n          }\n\n        case \"gender\":\n          {\n            user[name] = value;\n\n            if (value === \"\") {\n              errors[\"gender\"] = \"Please select your gender\";\n            } else {\n              delete errors[\"gender\"];\n            }\n\n            break;\n          }\n\n        case \"phone\":\n          {\n            if (value === \"\") {\n              errors[\"phone\"] = \"Please enter your contact number.\";\n              user[name] = value;\n            } else {\n              var _regex = /^[0-9]+$/g;\n\n              if (_regex.test(value)) {\n                user[name] = value;\n\n                if (value.length < 8 || value.length > 16) {\n                  errors[\"phone\"] = \"Phone number length should be more than 7 characters and less than 17 characters.\";\n                } else {\n                  delete errors[\"phone\"];\n                }\n              }\n            }\n\n            break;\n          }\n\n        case \"dob\":\n          {\n            var date = new Date();\n            var month = String(date.getMonth() + 1).padStart(2, \"0\");\n            var day = String(date.getDate()).padStart(2, \"0\");\n            var year = String(date.getFullYear());\n            var dateValue = value.split(\"-\");\n\n            if (+dateValue[0] > +year || +dateValue[0] === +year && +dateValue[1] > +month || +dateValue[0] === +year && +dateValue[1] === +month && +dateValue[2] > +day) {\n              errors[\"dob\"] = \"Date of birth should be less than current date\";\n            } else {\n              delete errors[\"dob\"];\n            }\n\n            break;\n          }\n\n        case \"email\":\n          {\n            // eslint-disable-next-line no-useless-escape\n            var _regex2 = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n            if (_regex2.test(value.trim())) {\n              delete errors[name];\n            } else {\n              errors[name] = \"Please enter a valid email address.\";\n            }\n\n            break;\n          }\n\n        case \"password\":\n          {\n            // eslint-disable-next-line no-useless-escape\n            var _regex3 = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/;\n\n            if (_regex3.test(value.trim())) {\n              delete errors[name];\n            } else {\n              errors[name] = \"Password must be at least 8 characters long and must contains 1 lowercase character, 1 uppercase character, 1 numeric character and 1 special character.\";\n            }\n\n            break;\n          }\n\n        case \"confirmPassword\":\n          {\n            var passwordError = _this.state.passwordError;\n\n            if (!(user[\"password\"] === value)) {\n              passwordError = \"Passwords didn't match. Try again.\";\n            } else {\n              passwordError = \"\";\n            }\n\n            _this.setState({\n              confirmPassword: value,\n              passwordError: passwordError\n            });\n          }\n      }\n\n      _this.setState({\n        user: user,\n        errors: errors\n      });\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var user = _this.state.user;\n      Object.keys(user).forEach(function (field) {\n        return _this.validateProperty(field, user[field]);\n      });\n\n      if (!_this.state.confirmPassword.trim()) {\n        _this.setState({\n          passwordError: \"Confirm Password can't be empty.\"\n        });\n      } else if (_this.state.confirmPassword !== _this.state.user[\"password\"]) {\n        _this.setState({\n          passwordError: \"Passwords didn't match. Try again.\"\n        });\n      }\n\n      if (!Object.keys(_this.state.errors).length || !_this.state.passwordError) {\n        localStorage.setItem(\"user\", JSON.stringify(_this.state.user));\n        var users = JSON.parse(localStorage.getItem(\"users\"));\n        var index = users.findIndex(function (el) {\n          return el.id === user.id;\n        });\n        users[index] = _this.state.user;\n        localStorage.setItem(\"users\", JSON.stringify(users));\n\n        _this.props.history.push(\"/home\");\n      }\n    };\n\n    var localUser = localStorage.getItem(\"user\");\n\n    if (!localUser) {\n      _this.props.history.push(\"/login\"); // console.log(this.props.location)\n\n    } else if (!_this.props.location.state) {\n      _this.props.history.push(\"/home\");\n    }\n\n    _this.state = {\n      user: {\n        firstName: \"\",\n        lastName: \"\",\n        dob: \"\",\n        email: \"\",\n        password: \"\",\n        phone: \"\",\n        gender: \"\"\n      },\n      errors: {},\n      confirmPassword: \"\",\n      passwordError: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(SignUp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var user = JSON.parse(localStorage.getItem(\"user\"));\n      this.setState({\n        user: user\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var user = this.state.user;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"my-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 9\n        }\n      }, \"Update Details\"), /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"firstName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }\n      }, \"First Name\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        name: \"firstName\",\n        id: \"firstName\",\n        required: true,\n        value: user.firstName,\n        onChange: function onChange(e) {\n          return _this2.validateProperty(e.target.name, e.target.value);\n        },\n        className: \"form-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-sm text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }\n      }, this.state.errors[\"firstName\"])), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"lastName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }\n      }, \"Last Name\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        name: \"lastName\",\n        id: \"lastName\",\n        required: true,\n        value: user.lastName,\n        onChange: function onChange(e) {\n          return _this2.validateProperty(e.target.name, e.target.value);\n        },\n        className: \"form-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-sm text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }\n      }, this.state.errors[\"lastName\"])), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"phone\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }\n      }, \"Phone Number\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"tel\",\n        name: \"phone\",\n        id: \"phone\",\n        required: true,\n        value: this.state.user.phone,\n        onChange: function onChange(e) {\n          return _this2.validateProperty(e.target.name, e.target.value);\n        },\n        className: \"form-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-sm text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }\n      }, this.state.errors[\"phone\"])), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"gender\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }\n      }, \"Gender\"), /*#__PURE__*/React.createElement(\"select\", {\n        name: \"gender\",\n        id: \"gender\",\n        value: this.state.user.gender,\n        className: \"form-control\",\n        onChange: function onChange(e) {\n          return _this2.validateProperty(e.target.name, e.target.value);\n        },\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"male\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 15\n        }\n      }, \"Male\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"female\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 15\n        }\n      }, \"Female\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"others\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 15\n        }\n      }, \"Others\")), /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-sm text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }\n      }, this.state.errors[\"gender\"])), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"dob\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }\n      }, \"Date Of Birth\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"date\",\n        name: \"dob\",\n        id: \"dob\",\n        max: \"2002-12-31\",\n        min: \"1920-01-01\",\n        required: true,\n        value: user.dob,\n        onChange: function onChange(e) {\n          return _this2.validateProperty(e.target.name, e.target.value);\n        },\n        className: \"form-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-sm text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }\n      }, this.state.errors[\"dob\"])), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }\n      }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        id: \"email\",\n        required: true,\n        value: user.email,\n        onChange: function onChange(e) {\n          return _this2.validateProperty(e.target.name, e.target.value);\n        },\n        className: \"form-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-sm text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }\n      }, this.state.errors[\"email\"])), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 13\n        }\n      }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        id: \"password\",\n        required: true,\n        value: user.password,\n        onChange: function onChange(e) {\n          return _this2.validateProperty(e.target.name, e.target.value);\n        },\n        className: \"form-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-sm text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 13\n        }\n      }, this.state.errors[\"password\"])), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"confirmPassword\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 13\n        }\n      }, \"Confirm Password\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"password\",\n        name: \"confirmPassword\",\n        id: \"confirmPassword\",\n        required: true,\n        value: this.state.confirmPassword,\n        onChange: function onChange(e) {\n          return _this2.validateProperty(e.target.name, e.target.value);\n        },\n        className: \"form-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-sm text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 13\n        }\n      }, this.state.passwordError)), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 11\n        }\n      }, \"Update\")));\n    }\n  }]);\n\n  return SignUp;\n}(Component);\n\nexport default withRouter(SignUp);","map":{"version":3,"sources":["/Users/dmitryhoma/Projects/login-signup-react/src/components/UpdateDetails.jsx"],"names":["React","Component","withRouter","SignUp","props","validateProperty","name","value","state","errors","user","regex","nameUser","trim","length","test","date","Date","month","String","getMonth","padStart","day","getDate","year","getFullYear","dateValue","split","passwordError","setState","confirmPassword","handleSubmit","e","preventDefault","Object","keys","forEach","field","localStorage","setItem","JSON","stringify","users","parse","getItem","index","findIndex","el","id","history","push","localUser","location","firstName","lastName","dob","email","password","phone","gender","target"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter } from 'react-router-dom'\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n    const localUser = localStorage.getItem(\"user\");\n    if (!localUser) {\n      this.props.history.push(\"/login\");\n\n    // console.log(this.props.location)\n    } else if(!this.props.location.state){\n      this.props.history.push(\"/home\");\n    }\n\n    this.state = {\n      user: {\n        firstName: \"\",\n        lastName: \"\",\n        dob: \"\",\n        email: \"\",\n        password: \"\",\n        phone : \"\",\n        gender : \"\"\n      },\n      errors: {},\n      confirmPassword: \"\",\n      passwordError: \"\"\n    };\n  }\n\n  validateProperty = (name, value) => {\n    const { errors, user } = this.state;\n    if ( (name !== \"confirmPassword\") && (name !== \"phone\") ) {\n      user[name] = value;\n    }\n    // eslint-disable-next-line default-case\n    switch (name) {\n      case \"firstName\":\n      case \"lastName\": {\n        let regex = /^[a-z ,.'-]+$/i;\n        const nameUser =\n          name === \"firstName\" ? \"First Name\" : \"Last Name\";\n        if(value === \"\"){\n          errors[\n            name\n          ] = `Please enter your ${nameUser}`;\n        }\n        else if (value.trim().length < 2) {\n          errors[\n            name\n          ] = `${nameUser} must be at least 2 characters long.`;\n        } else if (regex.test(value.trim())) {\n          delete errors[name];\n        } else {\n          errors[\n            name\n          ] = `${nameUser} contains alphanumeric charaters or ,.'- only`;\n        }\n        break;\n      }\n\n      case \"gender\" : {\n        user[name] = value;\n        if(value === \"\"){\n          errors[\"gender\"] = \"Please select your gender\";\n        } else{\n          delete errors[\"gender\"]\n        }\n        break;\n      }\n\n      case \"phone\" : {\n        if(value === \"\"){\n          errors[\"phone\"] = \"Please enter your contact number.\";\n          user[name] = value;\n        } else{\n          const regex = /^[0-9]+$/g;\n          if(regex.test(value)){\n            user[name] = value;\n            if(value.length<8 || value.length > 16){\n              errors[\"phone\"] = \"Phone number length should be more than 7 characters and less than 17 characters.\";\n            } else{\n              delete errors[\"phone\"]\n            }\n          }\n\n        }\n        break;\n      }\n\n      case \"dob\": {\n        const date = new Date();\n        const month = String(date.getMonth() + 1).padStart(2, \"0\");\n        const day = String(date.getDate()).padStart(2, \"0\");\n        const year = String(date.getFullYear());\n        const dateValue = value.split(\"-\");\n        if (\n          +dateValue[0] > +year ||\n          (+dateValue[0] === +year && +dateValue[1] > +month) ||\n          (+dateValue[0] === +year && +dateValue[1] === +month && +dateValue[2] > +day)\n        ) {\n          errors[\"dob\"] =\n            \"Date of birth should be less than current date\";\n        } else {\n          delete errors[\"dob\"];\n        }\n        break;\n      }\n\n      case \"email\": {\n        // eslint-disable-next-line no-useless-escape\n        const regex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (regex.test(value.trim())) {\n          delete errors[name];\n        } else {\n          errors[name] = \"Please enter a valid email address.\";\n        }\n        break;\n      }\n\n      case \"password\": {\n        // eslint-disable-next-line no-useless-escape\n        const regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/;\n        if (regex.test(value.trim())) {\n          delete errors[name];\n        } else {\n          errors[name] =\n            \"Password must be at least 8 characters long and must contains 1 lowercase character, 1 uppercase character, 1 numeric character and 1 special character.\";\n        }\n        break;\n      }\n\n      case \"confirmPassword\": {\n        let { passwordError } = this.state;\n        if (!(user[\"password\"] === value)) {\n          passwordError = \"Passwords didn't match. Try again.\";\n        } else {\n          passwordError = \"\";\n        }\n        this.setState({ confirmPassword: value, passwordError });\n      }\n    }\n    this.setState({ user, errors });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { user } = this.state;\n    Object.keys(user).forEach(field =>\n      this.validateProperty(field, user[field])\n    );\n    if (!this.state.confirmPassword.trim()) {\n      this.setState({\n        passwordError: \"Confirm Password can't be empty.\"\n      });\n    } else if (this.state.confirmPassword !== this.state.user[\"password\"]) {\n      this.setState({\n        passwordError: \"Passwords didn't match. Try again.\"\n      });\n    }\n    if (\n      !Object.keys(this.state.errors).length ||\n      !this.state.passwordError\n    ) {\n      localStorage.setItem(\"user\", JSON.stringify(this.state.user));\n      const users = JSON.parse(localStorage.getItem(\"users\"));\n      const index = users.findIndex(el => el.id === user.id);\n      users[index] = this.state.user;\n      localStorage.setItem(\"users\", JSON.stringify(users));\n      this.props.history.push(\"/home\");\n    }\n  };\n\n  componentDidMount() {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n    return (\n      <>\n        <h1 className=\"my-3\">Update Details</h1>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input\n              type=\"text\"\n              name=\"firstName\"\n              id=\"firstName\"\n              required\n              value={user.firstName}\n              onChange={e =>\n                this.validateProperty(\n                  e.target.name,\n                  e.target.value\n                )\n              }\n              className=\"form-control\"\n            />\n            <small className=\"text-sm text-danger\">\n              {this.state.errors[\"firstName\"]}\n            </small>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input\n              type=\"text\"\n              name=\"lastName\"\n              id=\"lastName\"\n              required\n              value={user.lastName}\n              onChange={e =>\n                this.validateProperty(\n                  e.target.name,\n                  e.target.value\n                )\n              }\n              className=\"form-control\"\n            />\n            <small className=\"text-sm text-danger\">\n              {this.state.errors[\"lastName\"]}\n            </small>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"phone\">Phone Number</label>\n            <input\n              type=\"tel\"\n              name=\"phone\"\n              id=\"phone\"\n              required\n              value={this.state.user.phone}\n              onChange={e =>\n                this.validateProperty(\n                  e.target.name,\n                  e.target.value\n                )\n              }\n              className=\"form-control\"\n            />\n            <small className=\"text-sm text-danger\">\n              {this.state.errors[\"phone\"]}\n            </small>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"gender\">Gender</label>\n            <select\n              name=\"gender\"\n              id=\"gender\"\n              value={this.state.user.gender}\n              className=\"form-control\"\n              onChange={e =>\n                this.validateProperty(\n                  e.target.name,\n                  e.target.value\n                )\n              }\n              required\n            >\n              <option></option>\n              <option value=\"male\">Male</option>\n              <option value=\"female\">Female</option>\n              <option value=\"others\">Others</option>\n            </select>\n            <small className=\"text-sm text-danger\">\n              {this.state.errors[\"gender\"]}\n            </small>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"dob\">Date Of Birth</label>\n            <input\n              type=\"date\"\n              name=\"dob\"\n              id=\"dob\"\n              max=\"2002-12-31\"\n              min=\"1920-01-01\"\n              required\n              value={user.dob}\n              onChange={e =>\n                this.validateProperty(\n                  e.target.name,\n                  e.target.value\n                )\n              }\n              className=\"form-control\"\n            />\n            <small className=\"text-sm text-danger\">\n              {this.state.errors[\"dob\"]}\n            </small>\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              id=\"email\"\n              required\n              value={user.email}\n              onChange={e =>\n                this.validateProperty(\n                  e.target.name,\n                  e.target.value\n                )\n              }\n              className=\"form-control\"\n            />\n            <small className=\"text-sm text-danger\">\n              {this.state.errors[\"email\"]}\n            </small>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              id=\"password\"\n              required\n              value={user.password}\n              onChange={e =>\n                this.validateProperty(\n                  e.target.name,\n                  e.target.value\n                )\n              }\n              className=\"form-control\"\n            />\n            <small className=\"text-sm text-danger\">\n              {this.state.errors[\"password\"]}\n            </small>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"confirmPassword\">\n              Confirm Password\n            </label>\n            <input\n              type=\"password\"\n              name=\"confirmPassword\"\n              id=\"confirmPassword\"\n              required\n              value={this.state.confirmPassword}\n              onChange={e =>\n                this.validateProperty(\n                  e.target.name,\n                  e.target.value\n                )\n              }\n              className=\"form-control\"\n            />\n            <small className=\"text-sm text-danger\">\n              {this.state.passwordError}\n            </small>\n          </div>\n          <button className=\"btn btn-primary\">Update</button>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default withRouter(SignUp);\n"]},"metadata":{},"sourceType":"module"}