{"ast":null,"code":"import _classCallCheck from \"/Users/dmitryhoma/Projects/login-signup-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dmitryhoma/Projects/login-signup-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dmitryhoma/Projects/login-signup-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dmitryhoma/Projects/login-signup-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dmitryhoma/Projects/login-signup-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/dmitryhoma/Projects/login-signup-react/src/components/Signup.jsx\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nvar pwd = require('secure-random-password');\n\nvar SignUp = /*#__PURE__*/function (_Component) {\n  _inherits(SignUp, _Component);\n\n  function SignUp(props) {\n    var _this;\n\n    _classCallCheck(this, SignUp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SignUp).call(this, props));\n\n    _this.generatePassword = function () {\n      password.randomPassword({\n        length: 8,\n        characters: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz!@#$%^&*'\n      });\n\n      _this.setState({\n        user: {\n          password: pwd\n        },\n        confirmPassword: pwd\n      });\n    };\n\n    _this.validateProperty = function (name, value) {\n      var _this$state = _this.state,\n          errors = _this$state.errors,\n          user = _this$state.user; // eslint-disable-next-line\n\n      switch (name) {\n        case \"firstName\":\n        case \"lastName\":\n          {\n            var regex = /^[a-z ,.'-]+$/i;\n            user[name] = value;\n            var nameUser = name === \"firstName\" ? \"First Name\" : \"Last Name\";\n\n            if (value === \"\") {\n              errors[name] = \"Please enter your \".concat(nameUser);\n            } else if (value.trim().length < 2) {\n              errors[name] = \"\".concat(nameUser, \" must be at least 2 characters long.\");\n            } else if (regex.test(value.trim())) {\n              delete errors[name];\n            } else {\n              errors[name] = \"\".concat(nameUser, \" contains alphanumeric charaters or ,.'- only\");\n            }\n\n            break;\n          }\n\n        case \"dob\":\n          {\n            user[name] = value;\n            var date = new Date();\n            var month = String(date.getMonth() + 1).padStart(2, \"0\");\n            var day = String(date.getDate()).padStart(2, \"0\");\n            var year = String(date.getFullYear());\n            var dateValue = value.split(\"-\");\n\n            if (+dateValue[0] > +year || +dateValue[0] === +year && +dateValue[1] > +month || +dateValue[0] === +year && +dateValue[1] === +month && +dateValue[2] > +day) {\n              errors[\"dob\"] = \"Date of birth should be less than current date\";\n            } else {\n              delete errors[\"dob\"];\n            }\n\n            break;\n          }\n\n        case \"gender\":\n          {\n            user[name] = value;\n\n            if (value === \"\") {\n              errors[\"gender\"] = \"Please select your gender\";\n            } else {\n              delete errors[\"gender\"];\n            }\n\n            break;\n          }\n\n        case \"phone\":\n          {\n            if (value === \"\") {\n              errors[\"phone\"] = \"Please enter your contact number.\";\n              user[name] = value;\n            } else {\n              var _regex = /^[0-9]+$/g;\n\n              if (_regex.test(value)) {\n                user[name] = value;\n\n                if (value.length !== 10) {\n                  errors[\"phone\"] = \"Phone number length should be 10 characters.\";\n                } else {\n                  delete errors[\"phone\"];\n                }\n              }\n            }\n\n            break;\n          }\n\n        case \"email\":\n          {\n            user[name] = value; // eslint-disable-next-line\n\n            var _regex2 = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n            if (_regex2.test(value.trim())) {\n              var users = JSON.parse(localStorage.getItem(\"users\")) || [];\n              var comp = users.filter(function (obj) {\n                return obj.email === value;\n              });\n\n              if (comp.length) {\n                errors[name] = \"Email already registered.\";\n              } else {\n                delete errors[name];\n              }\n            } else {\n              errors[name] = \"Please enter a valid email address.\";\n            }\n\n            break;\n          }\n\n        case \"password\":\n          {\n            var testPassword = function testPassword(pass) {\n              var allRigthCharacters = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz!@#$%^&*\";\n\n              for (var i = 0; i < pass.length; i++) {\n                if (allRigthCharacters.includes(pass[i])) {\n                  continue;\n                } else {\n                  return false;\n                }\n              }\n\n              return true;\n            };\n\n            user[name] = value;\n            var _regex3 = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,15})/;\n\n            if (_regex3.test(value.trim()) && testPassword(value.trim())) {\n              delete errors[name];\n            } else {\n              errors[name] = \"Error with password. Must comply with the regulations\";\n            }\n\n            break;\n          }\n\n        case \"confirmPassword\":\n          {\n            var _this$state2 = _this.state,\n                passwordError = _this$state2.passwordError,\n                confirmPassword = _this$state2.confirmPassword;\n\n            if (!(user[\"password\"] === value)) {\n              passwordError = \"Passwords didn't match. Try again.\";\n            } else if (!value.trim()) {\n              passwordError = \"Confirm Password can't be empty.\";\n            } else {\n              passwordError = \"\";\n              confirmPassword = value;\n            }\n\n            _this.setState({\n              passwordError: passwordError,\n              confirmPassword: confirmPassword\n            });\n\n            break;\n          }\n      }\n\n      _this.setState({\n        user: user,\n        errors: errors\n      });\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var user = _this.state.user;\n      Object.keys(user).forEach(function (field) {\n        return _this.validateProperty(field, user[field]);\n      });\n\n      if (!_this.state.confirmPassword.trim()) {\n        _this.setState({\n          passwordError: \"Confirm Password can't be empty.\"\n        });\n      } else if (_this.state.confirmPassword !== _this.state.user[\"password\"]) {\n        _this.setState({\n          passwordError: \"Passwords didn't match. Try again.\"\n        });\n      }\n\n      if (!Object.keys(_this.state.errors).length) {\n        _this.props.addUser(_this.state.user);\n      }\n    };\n\n    var _user = localStorage.getItem(\"user\");\n\n    if (_user) {\n      _this.props.history.push(\"/home\");\n    }\n\n    _this.state = {\n      user: {\n        firstName: \"\",\n        lastName: \"\",\n        dob: \"\",\n        email: \"\",\n        password: \"\",\n        phone: \"\",\n        gender: \"\"\n      },\n      errors: {},\n      confirmPassword: \"\",\n      passwordError: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(SignUp, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"my-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 9\n        }\n      }, \"SIGN UP\"), /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"firstName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }\n      }, \"First Name*\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        name: \"firstName\",\n        id: \"firstName\",\n        required: true,\n        onChange: function onChange(e) {\n          return _this2.validateProperty(e.target.name, e.target.value);\n        },\n        className: \"form-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-sm text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }\n      }, this.state.errors[\"firstName\"])), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"lastName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }\n      }, \"Last Name*\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        name: \"lastName\",\n        id: \"lastName\",\n        required: true,\n        onChange: function onChange(e) {\n          return _this2.validateProperty(e.target.name, e.target.value);\n        },\n        className: \"form-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-sm text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }\n      }, this.state.errors[\"lastName\"])), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"phone\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }\n      }, \"Phone Number*\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"tel\",\n        name: \"phone\",\n        id: \"phone\",\n        pattern: \"[0-9]{10}\",\n        required: true,\n        value: this.state.user.phone,\n        onChange: function onChange(e) {\n          return _this2.validateProperty(e.target.name, e.target.value);\n        },\n        className: \"form-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"small\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }\n      }, \"Format: 1234567890\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 46\n        }\n      }), /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-sm text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }\n      }, this.state.errors[\"phone\"])), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"gender\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }\n      }, \"Gender*\"), /*#__PURE__*/React.createElement(\"select\", {\n        name: \"gender\",\n        id: \"gender\",\n        required: true,\n        value: this.state.user.gender,\n        className: \"form-control\",\n        onChange: function onChange(e) {\n          return _this2.validateProperty(e.target.name, e.target.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"male\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 15\n        }\n      }, \"Male\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"female\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 15\n        }\n      }, \"Female\")), /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-sm text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }\n      }, this.state.errors[\"gender\"])), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"dob\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }\n      }, \"Date Of Birth*\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"date\",\n        name: \"dob\",\n        id: \"dob\",\n        required: true,\n        max: \"2022-01-01\",\n        min: \"1920-01-01\",\n        onChange: function onChange(e) {\n          return _this2.validateProperty(e.target.name, e.target.value);\n        },\n        className: \"form-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-sm text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }\n      }, this.state.errors[\"dob\"])), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }\n      }, \"Email*\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        autoComplete: \"off\",\n        id: \"email\",\n        required: true,\n        onChange: function onChange(e) {\n          return _this2.validateProperty(e.target.name, e.target.value);\n        },\n        className: \"form-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 13\n        }\n      }, \"Email must be example@example.example\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-sm text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }\n      }, this.state.errors[\"email\"])), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }\n      }, \"Password*\"), /*#__PURE__*/React.createElement(\"input\", {\n        name: \"password\",\n        id: \"password\",\n        required: true,\n        value: this.state.user.password,\n        onChange: function onChange(e) {\n          return _this2.validateProperty(e.target.name, e.target.value);\n        },\n        className: \"form-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }\n      }, \"Password must be at least 8 characters long and must contains 1 lowercase character, 1 uppercase character, 1 numeric character and 1 special character !@#$%^&*.\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-sm text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 13\n        }\n      }, this.state.errors[\"password\"])), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"confirmPassword\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 13\n        }\n      }, \"Confirm Password*\"), /*#__PURE__*/React.createElement(\"input\", {\n        name: \"confirmPassword\",\n        id: \"confirmPassword\",\n        required: true,\n        value: this.state.confirmPassword,\n        onChange: function onChange(e) {\n          return _this2.validateProperty(e.target.name, e.target.value);\n        },\n        className: \"form-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-sm text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 13\n        }\n      }, this.state.passwordError)), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }\n      }, \"Sign Up\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-success\",\n        onClick: this.generatePassword,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }\n      }, \"Recomend Password\")));\n    }\n  }]);\n\n  return SignUp;\n}(Component);\n\nexport default withRouter(SignUp);","map":{"version":3,"sources":["/Users/dmitryhoma/Projects/login-signup-react/src/components/Signup.jsx"],"names":["React","Component","withRouter","pwd","require","SignUp","props","generatePassword","password","randomPassword","length","characters","setState","user","confirmPassword","validateProperty","name","value","state","errors","regex","nameUser","trim","test","date","Date","month","String","getMonth","padStart","day","getDate","year","getFullYear","dateValue","split","users","JSON","parse","localStorage","getItem","comp","filter","obj","email","testPassword","pass","allRigthCharacters","i","includes","passwordError","handleSubmit","e","preventDefault","Object","keys","forEach","field","addUser","history","push","firstName","lastName","dob","phone","gender","target"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AACA,IAAMC,GAAG,GAAGC,OAAO,CAAC,wBAAD,CAAnB;;IAEMC,M;;;AACJ,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,gFAAMA,KAAN;;AADiB,UAsBnBC,gBAtBmB,GAsBA,YAAM;AACvBC,MAAAA,QAAQ,CAACC,cAAT,CAAwB;AACtBC,QAAAA,MAAM,EAAE,CADc;AAEtBC,QAAAA,UAAU,EAAE;AAFU,OAAxB;;AAKA,YAAKC,QAAL,CAAc;AACZC,QAAAA,IAAI,EAAC;AACHL,UAAAA,QAAQ,EAAEL;AADP,SADO;AAIZW,QAAAA,eAAe,EAAEX;AAJL,OAAd;AAMD,KAlCkB;;AAAA,UAoCnBY,gBApCmB,GAoCA,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAAA,wBACT,MAAKC,KADI;AAAA,UAC1BC,MAD0B,eAC1BA,MAD0B;AAAA,UAClBN,IADkB,eAClBA,IADkB,EAElC;;AACA,cAAQG,IAAR;AACE,aAAK,WAAL;AACA,aAAK,UAAL;AAAiB;AACf,gBAAII,KAAK,GAAG,gBAAZ;AACAP,YAAAA,IAAI,CAACG,IAAD,CAAJ,GAAaC,KAAb;AACA,gBAAMI,QAAQ,GACZL,IAAI,KAAK,WAAT,GAAuB,YAAvB,GAAsC,WADxC;;AAEA,gBAAGC,KAAK,KAAK,EAAb,EAAgB;AACdE,cAAAA,MAAM,CAACH,IAAD,CAAN,+BAAoCK,QAApC;AACD,aAFD,MAEO,IAAIJ,KAAK,CAACK,IAAN,GAAaZ,MAAb,GAAsB,CAA1B,EAA6B;AAClCS,cAAAA,MAAM,CAACH,IAAD,CAAN,aAAkBK,QAAlB;AACD,aAFM,MAEA,IAAID,KAAK,CAACG,IAAN,CAAWN,KAAK,CAACK,IAAN,EAAX,CAAJ,EAA8B;AACnC,qBAAOH,MAAM,CAACH,IAAD,CAAb;AACD,aAFM,MAEA;AACLG,cAAAA,MAAM,CAACH,IAAD,CAAN,aAAkBK,QAAlB;AACD;;AACD;AACD;;AAED,aAAK,KAAL;AAAY;AACVR,YAAAA,IAAI,CAACG,IAAD,CAAJ,GAAaC,KAAb;AACA,gBAAMO,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACA,gBAAMC,KAAK,GAAGC,MAAM,CAACH,IAAI,CAACI,QAAL,KAAkB,CAAnB,CAAN,CAA4BC,QAA5B,CAAqC,CAArC,EAAwC,GAAxC,CAAd;AACA,gBAAMC,GAAG,GAAGH,MAAM,CAACH,IAAI,CAACO,OAAL,EAAD,CAAN,CAAuBF,QAAvB,CAAgC,CAAhC,EAAmC,GAAnC,CAAZ;AACA,gBAAMG,IAAI,GAAGL,MAAM,CAACH,IAAI,CAACS,WAAL,EAAD,CAAnB;AACA,gBAAMC,SAAS,GAAGjB,KAAK,CAACkB,KAAN,CAAY,GAAZ,CAAlB;;AACA,gBACE,CAACD,SAAS,CAAC,CAAD,CAAV,GAAgB,CAACF,IAAjB,IACC,CAACE,SAAS,CAAC,CAAD,CAAV,KAAkB,CAACF,IAAnB,IAA2B,CAACE,SAAS,CAAC,CAAD,CAAV,GAAgB,CAACR,KAD7C,IAEC,CAACQ,SAAS,CAAC,CAAD,CAAV,KAAkB,CAACF,IAAnB,IACC,CAACE,SAAS,CAAC,CAAD,CAAV,KAAkB,CAACR,KADpB,IAEC,CAACQ,SAAS,CAAC,CAAD,CAAV,GAAgB,CAACJ,GALrB,EAME;AACAX,cAAAA,MAAM,CAAC,KAAD,CAAN,GAAgB,gDAAhB;AACD,aARD,MAQO;AACL,qBAAOA,MAAM,CAAC,KAAD,CAAb;AACD;;AACD;AACD;;AAED,aAAK,QAAL;AAAgB;AACdN,YAAAA,IAAI,CAACG,IAAD,CAAJ,GAAaC,KAAb;;AACA,gBAAGA,KAAK,KAAK,EAAb,EAAgB;AACdE,cAAAA,MAAM,CAAC,QAAD,CAAN,GAAmB,2BAAnB;AACD,aAFD,MAEM;AACJ,qBAAOA,MAAM,CAAC,QAAD,CAAb;AACD;;AACD;AACD;;AAED,aAAK,OAAL;AAAe;AACb,gBAAGF,KAAK,KAAK,EAAb,EAAgB;AACdE,cAAAA,MAAM,CAAC,OAAD,CAAN,GAAkB,mCAAlB;AACAN,cAAAA,IAAI,CAACG,IAAD,CAAJ,GAAaC,KAAb;AACD,aAHD,MAGM;AACJ,kBAAMG,MAAK,GAAG,WAAd;;AACA,kBAAGA,MAAK,CAACG,IAAN,CAAWN,KAAX,CAAH,EAAqB;AACnBJ,gBAAAA,IAAI,CAACG,IAAD,CAAJ,GAAaC,KAAb;;AACA,oBAAGA,KAAK,CAACP,MAAN,KAAiB,EAApB,EAAuB;AACrBS,kBAAAA,MAAM,CAAC,OAAD,CAAN,GAAkB,8CAAlB;AACD,iBAFD,MAEM;AACJ,yBAAOA,MAAM,CAAC,OAAD,CAAb;AACD;AACF;AACF;;AACD;AACD;;AAED,aAAK,OAAL;AAAc;AACZN,YAAAA,IAAI,CAACG,IAAD,CAAJ,GAAaC,KAAb,CADY,CAEZ;;AACA,gBAAMG,OAAK,GAAG,wJAAd;;AACA,gBAAIA,OAAK,CAACG,IAAN,CAAWN,KAAK,CAACK,IAAN,EAAX,CAAJ,EAA8B;AAC5B,kBAAMc,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,KAA6C,EAA3D;AACA,kBAAMC,IAAI,GAAIL,KAAK,CAACM,MAAN,CAAa,UAAAC,GAAG;AAAA,uBAAIA,GAAG,CAACC,KAAJ,KAAc3B,KAAlB;AAAA,eAAhB,CAAd;;AACA,kBAAIwB,IAAI,CAAC/B,MAAT,EAAiB;AACfS,gBAAAA,MAAM,CAACH,IAAD,CAAN,GAAe,2BAAf;AACD,eAFD,MAEO;AACL,uBAAOG,MAAM,CAACH,IAAD,CAAb;AACD;AACF,aARD,MAQO;AACLG,cAAAA,MAAM,CAACH,IAAD,CAAN,GAAe,qCAAf;AACD;;AACD;AACD;;AAED,aAAK,UAAL;AAAiB;AAAA,gBAEN6B,YAFM,GAEf,SAASA,YAAT,CAAsBC,IAAtB,EAA4B;AAC1B,kBAAIC,kBAAkB,GAAG,wEAAzB;;AACA,mBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACpC,MAAzB,EAAiCsC,CAAC,EAAlC,EAAsC;AACpC,oBAAID,kBAAkB,CAACE,QAAnB,CAA4BH,IAAI,CAACE,CAAD,CAAhC,CAAJ,EAA0C;AACxC;AACD,iBAFD,MAEO;AACL,yBAAO,KAAP;AACD;AACF;;AACD,qBAAO,IAAP;AACD,aAZc;;AACfnC,YAAAA,IAAI,CAACG,IAAD,CAAJ,GAAaC,KAAb;AAYA,gBAAMG,OAAK,GAAG,+DAAd;;AACA,gBAAIA,OAAK,CAACG,IAAN,CAAWN,KAAK,CAACK,IAAN,EAAX,KAA4BuB,YAAY,CAAC5B,KAAK,CAACK,IAAN,EAAD,CAA5C,EAA4D;AAC1D,qBAAOH,MAAM,CAACH,IAAD,CAAb;AACD,aAFD,MAEO;AACLG,cAAAA,MAAM,CAACH,IAAD,CAAN,GAAe,uDAAf;AACD;;AACD;AACD;;AAED,aAAK,iBAAL;AAAwB;AAAA,+BACmB,MAAKE,KADxB;AAAA,gBAChBgC,aADgB,gBAChBA,aADgB;AAAA,gBACDpC,eADC,gBACDA,eADC;;AAEtB,gBAAI,EAAED,IAAI,CAAC,UAAD,CAAJ,KAAqBI,KAAvB,CAAJ,EAAmC;AACjCiC,cAAAA,aAAa,GAAG,oCAAhB;AACD,aAFD,MAEO,IAAI,CAACjC,KAAK,CAACK,IAAN,EAAL,EAAmB;AACxB4B,cAAAA,aAAa,GAAG,kCAAhB;AACD,aAFM,MAEA;AACLA,cAAAA,aAAa,GAAG,EAAhB;AACApC,cAAAA,eAAe,GAAGG,KAAlB;AACD;;AACD,kBAAKL,QAAL,CAAc;AAAEsC,cAAAA,aAAa,EAAbA,aAAF;AAAiBpC,cAAAA,eAAe,EAAfA;AAAjB,aAAd;;AACA;AACD;AAxHH;;AA0HA,YAAKF,QAAL,CAAc;AAAEC,QAAAA,IAAI,EAAJA,IAAF;AAAQM,QAAAA,MAAM,EAANA;AAAR,OAAd;AACD,KAlKkB;;AAAA,UAoKnBgC,YApKmB,GAoKJ,UAAAC,CAAC,EAAI;AAClBA,MAAAA,CAAC,CAACC,cAAF;AADkB,UAEVxC,IAFU,GAED,MAAKK,KAFJ,CAEVL,IAFU;AAGlByC,MAAAA,MAAM,CAACC,IAAP,CAAY1C,IAAZ,EAAkB2C,OAAlB,CAA0B,UAAAC,KAAK;AAAA,eAC7B,MAAK1C,gBAAL,CAAsB0C,KAAtB,EAA6B5C,IAAI,CAAC4C,KAAD,CAAjC,CAD6B;AAAA,OAA/B;;AAGA,UAAI,CAAC,MAAKvC,KAAL,CAAWJ,eAAX,CAA2BQ,IAA3B,EAAL,EAAwC;AACtC,cAAKV,QAAL,CAAc;AACZsC,UAAAA,aAAa,EAAE;AADH,SAAd;AAGD,OAJD,MAIO,IAAI,MAAKhC,KAAL,CAAWJ,eAAX,KAA+B,MAAKI,KAAL,CAAWL,IAAX,CAAgB,UAAhB,CAAnC,EAAgE;AACrE,cAAKD,QAAL,CAAc;AACZsC,UAAAA,aAAa,EAAE;AADH,SAAd;AAGD;;AACD,UAAI,CAACI,MAAM,CAACC,IAAP,CAAY,MAAKrC,KAAL,CAAWC,MAAvB,EAA+BT,MAApC,EAA4C;AAC1C,cAAKJ,KAAL,CAAWoD,OAAX,CAAmB,MAAKxC,KAAL,CAAWL,IAA9B;AACD;AACF,KAtLkB;;AAEjB,QAAMA,KAAI,GAAG0B,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAb;;AACA,QAAI3B,KAAJ,EAAU;AACR,YAAKP,KAAL,CAAWqD,OAAX,CAAmBC,IAAnB,CAAwB,OAAxB;AACD;;AACD,UAAK1C,KAAL,GAAa;AACXL,MAAAA,IAAI,EAAE;AACJgD,QAAAA,SAAS,EAAE,EADP;AAEJC,QAAAA,QAAQ,EAAE,EAFN;AAGJC,QAAAA,GAAG,EAAE,EAHD;AAIJnB,QAAAA,KAAK,EAAE,EAJH;AAKJpC,QAAAA,QAAQ,EAAE,EALN;AAMJwD,QAAAA,KAAK,EAAG,EANJ;AAOJC,QAAAA,MAAM,EAAG;AAPL,OADK;AAUX9C,MAAAA,MAAM,EAAE,EAVG;AAWXL,MAAAA,eAAe,EAAE,EAXN;AAYXoC,MAAAA,aAAa,EAAE;AAZJ,KAAb;AANiB;AAoBlB;;;;6BAoKQ;AAAA;;AACP,0BACE,uDACE;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAM,QAAA,QAAQ,EAAE,KAAKC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAO,QAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,WAFP;AAGE,QAAA,EAAE,EAAC,WAHL;AAIE,QAAA,QAAQ,MAJV;AAKE,QAAA,QAAQ,EAAE,kBAAAC,CAAC;AAAA,iBACT,MAAI,CAACrC,gBAAL,CACEqC,CAAC,CAACc,MAAF,CAASlD,IADX,EAEEoC,CAAC,CAACc,MAAF,CAASjD,KAFX,CADS;AAAA,SALb;AAWE,QAAA,SAAS,EAAC,cAXZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,eAeE;AAAO,QAAA,SAAS,EAAC,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKC,KAAL,CAAWC,MAAX,CAAkB,WAAlB,CADH,CAfF,CAFF,eAsBE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,EAAE,EAAC,UAHL;AAIE,QAAA,QAAQ,MAJV;AAKE,QAAA,QAAQ,EAAE,kBAAAiC,CAAC;AAAA,iBACT,MAAI,CAACrC,gBAAL,CACEqC,CAAC,CAACc,MAAF,CAASlD,IADX,EAEEoC,CAAC,CAACc,MAAF,CAASjD,KAFX,CADS;AAAA,SALb;AAWE,QAAA,SAAS,EAAC,cAXZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,eAeE;AAAO,QAAA,SAAS,EAAC,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKC,KAAL,CAAWC,MAAX,CAAkB,UAAlB,CADH,CAfF,CAtBF,eAyCE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE;AACE,QAAA,IAAI,EAAC,KADP;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,EAAE,EAAC,OAHL;AAIE,QAAA,OAAO,EAAC,WAJV;AAKE,QAAA,QAAQ,MALV;AAME,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWL,IAAX,CAAgBmD,KANzB;AAOE,QAAA,QAAQ,EAAE,kBAAAZ,CAAC;AAAA,iBACT,MAAI,CAACrC,gBAAL,CACEqC,CAAC,CAACc,MAAF,CAASlD,IADX,EAEEoC,CAAC,CAACc,MAAF,CAASjD,KAFX,CADS;AAAA,SAPb;AAaE,QAAA,SAAS,EAAC,cAbZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,eAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAjBF,eAiBmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjBnC,eAkBE;AAAO,QAAA,SAAS,EAAC,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKC,KAAL,CAAWC,MAAX,CAAkB,OAAlB,CADH,CAlBF,CAzCF,eAgEE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,EAAE,EAAC,QAFL;AAGE,QAAA,QAAQ,MAHV;AAIE,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWL,IAAX,CAAgBoD,MAJzB;AAKE,QAAA,SAAS,EAAC,cALZ;AAME,QAAA,QAAQ,EAAE,kBAAAb,CAAC;AAAA,iBACT,MAAI,CAACrC,gBAAL,CACEqC,CAAC,CAACc,MAAF,CAASlD,IADX,EAEEoC,CAAC,CAACc,MAAF,CAASjD,KAFX,CADS;AAAA,SANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbF,eAcE;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF,eAeE;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfF,CAFF,eAmBE;AAAO,QAAA,SAAS,EAAC,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKC,KAAL,CAAWC,MAAX,CAAkB,QAAlB,CADH,CAnBF,CAhEF,eAuFE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAO,QAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,KAFP;AAGE,QAAA,EAAE,EAAC,KAHL;AAIE,QAAA,QAAQ,MAJV;AAKE,QAAA,GAAG,EAAC,YALN;AAME,QAAA,GAAG,EAAC,YANN;AAOE,QAAA,QAAQ,EAAE,kBAAAiC,CAAC;AAAA,iBACT,MAAI,CAACrC,gBAAL,CACEqC,CAAC,CAACc,MAAF,CAASlD,IADX,EAEEoC,CAAC,CAACc,MAAF,CAASjD,KAFX,CADS;AAAA,SAPb;AAaE,QAAA,SAAS,EAAC,cAbZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,eAiBE;AAAO,QAAA,SAAS,EAAC,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKC,KAAL,CAAWC,MAAX,CAAkB,KAAlB,CADH,CAjBF,CAvFF,eA6GE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,YAAY,EAAC,KAHf;AAIE,QAAA,EAAE,EAAC,OAJL;AAKE,QAAA,QAAQ,MALV;AAME,QAAA,QAAQ,EAAE,kBAAAiC,CAAC;AAAA,iBACT,MAAI,CAACrC,gBAAL,CACEqC,CAAC,CAACc,MAAF,CAASlD,IADX,EAEEoC,CAAC,CAACc,MAAF,CAASjD,KAFX,CADS;AAAA,SANb;AAYE,QAAA,SAAS,EAAC,cAZZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,eAgBE;AAAO,QAAA,SAAS,EAAC,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAhBF,eAkBU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlBV,eAmBE;AAAO,QAAA,SAAS,EAAC,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKC,KAAL,CAAWC,MAAX,CAAkB,OAAlB,CADH,CAnBF,CA7GF,eAqIE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,EAAE,EAAC,UAFL;AAGE,QAAA,QAAQ,MAHV;AAIE,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWL,IAAX,CAAgBL,QAJzB;AAKE,QAAA,QAAQ,EAAE,kBAAA4C,CAAC;AAAA,iBACT,MAAI,CAACrC,gBAAL,CACEqC,CAAC,CAACc,MAAF,CAASlD,IADX,EAEEoC,CAAC,CAACc,MAAF,CAASjD,KAFX,CADS;AAAA,SALb;AAWE,QAAA,SAAS,EAAC,cAXZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,eAeE;AAAO,QAAA,SAAS,EAAC,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6KAfF,eAkBU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlBV,eAmBE;AAAO,QAAA,SAAS,EAAC,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKC,KAAL,CAAWC,MAAX,CAAkB,UAAlB,CADH,CAnBF,CArIF,eA6JE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAO,QAAA,OAAO,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,eAIE;AACE,QAAA,IAAI,EAAC,iBADP;AAEE,QAAA,EAAE,EAAC,iBAFL;AAGE,QAAA,QAAQ,MAHV;AAIE,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWJ,eAJpB;AAKE,QAAA,QAAQ,EAAE,kBAAAsC,CAAC;AAAA,iBACT,MAAI,CAACrC,gBAAL,CACEqC,CAAC,CAACc,MAAF,CAASlD,IADX,EAEEoC,CAAC,CAACc,MAAF,CAASjD,KAFX,CADS;AAAA,SALb;AAWE,QAAA,SAAS,EAAC,cAXZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,eAiBE;AAAO,QAAA,SAAS,EAAC,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKC,KAAL,CAAWgC,aADd,CAjBF,CA7JF,eAmLE;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAnLF,eAoLE;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAoC,QAAA,OAAO,EAAE,KAAK3C,gBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BApLF,CAFF,CADF;AA2LD;;;;EArXkBN,S;;AAwXrB,eAAeC,UAAU,CAACG,MAAD,CAAzB","sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nconst pwd = require('secure-random-password');\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n    const user = localStorage.getItem(\"user\");\n    if (user) {\n      this.props.history.push(\"/home\");\n    }\n    this.state = {\n      user: {\n        firstName: \"\",\n        lastName: \"\",\n        dob: \"\",\n        email: \"\",\n        password: \"\",\n        phone : \"\",\n        gender : \"\"\n      },\n      errors: {},\n      confirmPassword: \"\",\n      passwordError: \"\",\n    };\n  }\n\n  generatePassword = () => {\n    password.randomPassword({\n      length: 8,\n      characters: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz!@#$%^&*'\n    })\n\n    this.setState({\n      user:{\n        password: pwd\n      },\n      confirmPassword: pwd\n    })\n  }\n\n  validateProperty = (name, value) => {\n    const { errors, user } = this.state;\n    // eslint-disable-next-line\n    switch (name) {\n      case \"firstName\":\n      case \"lastName\": {\n        let regex = /^[a-z ,.'-]+$/i;\n        user[name] = value;\n        const nameUser =\n          name === \"firstName\" ? \"First Name\" : \"Last Name\";\n        if(value === \"\"){\n          errors[name] = `Please enter your ${nameUser}`;\n        } else if (value.trim().length < 2) {\n          errors[name] = `${nameUser} must be at least 2 characters long.`;\n        } else if (regex.test(value.trim())) {\n          delete errors[name];\n        } else {\n          errors[name] = `${nameUser} contains alphanumeric charaters or ,.'- only`;\n        }\n        break;\n      }\n\n      case \"dob\": {\n        user[name] = value;\n        const date = new Date();\n        const month = String(date.getMonth() + 1).padStart(2, \"0\");\n        const day = String(date.getDate()).padStart(2, \"0\");\n        const year = String(date.getFullYear());\n        const dateValue = value.split(\"-\");\n        if (\n          +dateValue[0] > +year ||\n          (+dateValue[0] === +year && +dateValue[1] > +month) ||\n          (+dateValue[0] === +year &&\n            +dateValue[1] === +month &&\n            +dateValue[2] > +day)\n        ) {\n          errors[\"dob\"] = \"Date of birth should be less than current date\";\n        } else {\n          delete errors[\"dob\"];\n        }\n        break;\n      }\n\n      case \"gender\" : {\n        user[name] = value;\n        if(value === \"\"){\n          errors[\"gender\"] = \"Please select your gender\";\n        } else{\n          delete errors[\"gender\"]\n        }\n        break;\n      }\n\n      case \"phone\" : {\n        if(value === \"\"){\n          errors[\"phone\"] = \"Please enter your contact number.\";\n          user[name] = value;\n        } else{\n          const regex = /^[0-9]+$/g;\n          if(regex.test(value)){\n            user[name] = value;\n            if(value.length !== 10){\n              errors[\"phone\"] = \"Phone number length should be 10 characters.\";\n            } else{\n              delete errors[\"phone\"]\n            }\n          }\n        }\n        break;\n      }\n\n      case \"email\": {\n        user[name] = value;\n        // eslint-disable-next-line\n        const regex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (regex.test(value.trim())) {\n          const users = JSON.parse(localStorage.getItem(\"users\")) || [];\n          const comp  = users.filter(obj => obj.email === value);\n          if (comp.length) {\n            errors[name] = \"Email already registered.\";\n          } else {\n            delete errors[name];\n          }\n        } else {\n          errors[name] = \"Please enter a valid email address.\";\n        }\n        break;\n      }\n\n      case \"password\": {\n        user[name] = value;\n        function testPassword(pass) {\n          let allRigthCharacters = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz!@#$%^&*\";\n          for (let i = 0; i < pass.length; i++) {\n            if (allRigthCharacters.includes(pass[i])) {\n              continue;\n            } else {\n              return false;\n            }\n          }\n          return true;\n        }\n        const regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,15})/;\n        if (regex.test(value.trim()) && testPassword(value.trim())) {\n          delete errors[name];\n        } else {\n          errors[name] = \"Error with password. Must comply with the regulations\";\n        }\n        break;\n      }\n\n      case \"confirmPassword\": {\n        let { passwordError, confirmPassword } = this.state;\n        if (!(user[\"password\"] === value)) {\n          passwordError = \"Passwords didn't match. Try again.\";\n        } else if (!value.trim()) {\n          passwordError = \"Confirm Password can't be empty.\";\n        } else {\n          passwordError = \"\";\n          confirmPassword = value;\n        }\n        this.setState({ passwordError, confirmPassword });\n        break;\n      }\n    }\n    this.setState({ user, errors });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { user } = this.state;\n    Object.keys(user).forEach(field =>\n      this.validateProperty(field, user[field])\n    );\n    if (!this.state.confirmPassword.trim()) {\n      this.setState({\n        passwordError: \"Confirm Password can't be empty.\"\n      });\n    } else if (this.state.confirmPassword !== this.state.user[\"password\"]) {\n      this.setState({\n        passwordError: \"Passwords didn't match. Try again.\"\n      });\n    }\n    if (!Object.keys(this.state.errors).length) {\n      this.props.addUser(this.state.user);\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <h1 className=\"my-3\">SIGN UP</h1>\n        <form onSubmit={this.handleSubmit}>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"firstName\">First Name*</label>\n            <input\n              type=\"text\"\n              name=\"firstName\"\n              id=\"firstName\"\n              required\n              onChange={e =>\n                this.validateProperty(\n                  e.target.name,\n                  e.target.value\n                )\n              }\n              className=\"form-control\"\n            />\n            <small className=\"text-sm text-danger\">\n              {this.state.errors[\"firstName\"]}\n            </small>\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"lastName\">Last Name*</label>\n            <input\n              type=\"text\"\n              name=\"lastName\"\n              id=\"lastName\"\n              required\n              onChange={e =>\n                this.validateProperty(\n                  e.target.name,\n                  e.target.value\n                )\n              }\n              className=\"form-control\"\n            />\n            <small className=\"text-sm text-danger\">\n              {this.state.errors[\"lastName\"]}\n            </small>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"phone\">Phone Number*</label>\n            <input\n              type=\"tel\"\n              name=\"phone\"\n              id=\"phone\"\n              pattern=\"[0-9]{10}\"\n              required\n              value={this.state.user.phone}\n              onChange={e =>\n                this.validateProperty(\n                  e.target.name,\n                  e.target.value\n                )\n              }\n              className=\"form-control\"\n            />\n            <small>Format: 1234567890</small><br/>\n            <small className=\"text-sm text-danger\">\n              {this.state.errors[\"phone\"]}\n            </small>\n\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"gender\">Gender*</label>\n            <select\n              name=\"gender\"\n              id=\"gender\"\n              required\n              value={this.state.user.gender}\n              className=\"form-control\"\n              onChange={e =>\n                this.validateProperty(\n                  e.target.name,\n                  e.target.value\n                )\n              }\n            >\n              <option></option>\n              <option value=\"male\">Male</option>\n              <option value=\"female\">Female</option>\n            </select>\n            <small className=\"text-sm text-danger\">\n              {this.state.errors[\"gender\"]}\n            </small>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"dob\">Date Of Birth*</label>\n            <input\n              type=\"date\"\n              name=\"dob\"\n              id=\"dob\"\n              required\n              max=\"2022-01-01\"\n              min=\"1920-01-01\"\n              onChange={e =>\n                this.validateProperty(\n                  e.target.name,\n                  e.target.value\n                )\n              }\n              className=\"form-control\"\n            />\n            <small className=\"text-sm text-danger\">\n              {this.state.errors[\"dob\"]}\n            </small>\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">Email*</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              autoComplete=\"off\"\n              id=\"email\"\n              required\n              onChange={e =>\n                this.validateProperty(\n                  e.target.name,\n                  e.target.value\n                )\n              }\n              className=\"form-control\"\n            />\n            <small className=\"text-sm\">\n              Email must be example@example.example\n            </small><br/>\n            <small className=\"text-sm text-danger\">\n              {this.state.errors[\"email\"]}\n            </small>\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password*</label>\n            <input\n              name=\"password\"\n              id=\"password\"\n              required\n              value={this.state.user.password}\n              onChange={e =>\n                this.validateProperty(\n                  e.target.name,\n                  e.target.value\n                )\n              }\n              className=\"form-control\"\n            />\n            <small className=\"text-sm\">\n              Password must be at least 8 characters long and must contains 1 lowercase character,\n              1 uppercase character, 1 numeric character and 1 special character !@#$%^&*.\n            </small><br/>\n            <small className=\"text-sm text-danger\">\n              {this.state.errors[\"password\"]}\n            </small>\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"confirmPassword\">\n              Confirm Password*\n            </label>\n            <input\n              name=\"confirmPassword\"\n              id=\"confirmPassword\"\n              required\n              value={this.state.confirmPassword}\n              onChange={e =>\n                this.validateProperty(\n                  e.target.name,\n                  e.target.value\n                )\n              }\n              className=\"form-control\"\n            />\n            <small className=\"text-sm text-danger\">\n              {this.state.passwordError}\n            </small>\n          </div>\n\n          <button className=\"btn btn-primary\">Sign Up</button>\n          <button className=\"btn btn-success\" onClick={this.generatePassword}>Recomend Password</button>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default withRouter(SignUp);\n"]},"metadata":{},"sourceType":"module"}